{"ast":null,"code":"var _jsxFileName = \"/Users/skj14102001/Desktop/muvi/src/components/Search/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchMovies } from \"../../redux/movieSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    let Text = e.target.value;\n    dispatch(fetchMovies({\n      Text\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/skj14102001/Desktop/muvi/src/components/Search/Search.jsx"],"names":["React","useState","useDispatch","useSelector","fetchMovies","Search","dispatch","handleChange","e","Text","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,WAAR,QAA2B,wBAA3B;;AAKA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAE/B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AACAL,IAAAA,QAAQ,CAACF,WAAW,CAAE;AAAEK,MAAAA;AAAF,KAAF,CAAZ,CAAR;AACD,GAHD;;AAKA,sBAEE;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAOD;;GAhBuBF,M;UAELH,W;;;KAFKG,M","sourcesContent":["import React, { useState } from 'react';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {fetchMovies } from \"../../redux/movieSlice\";\n\n\n\n\nexport default function Search() {\n  \n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    let Text = e.target.value;\n    dispatch(fetchMovies( { Text } ));\n  }\n\n  return (\n    \n    <div>\n        <input type=\"text\" onChange={handleChange}/>\n    </div>\n\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}