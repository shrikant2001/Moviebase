{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport fetcher from \"./movies\";\nconst fetchMovies = createAsyncThunk('movies/fetchMovies', async () => {\n  return await fetcher.get(`?apikey=e8960dea&s=batman`).then(res => console.log(res));\n});\nconst movieSlice = createSlice({\n  name: \"movies\",\n  initialState: {\n    movieArr: [],\n    status: \"Pending\"\n  },\n  reducers: {\n    getMovie: (state, action) => {}\n  },\n  extraReducers: {\n    [fetchMovies.pending]: state => {\n      state.status = 'Pending';\n    },\n    [fetchMovies.fulfilled]: (state, action) => {\n      state.status = 'Fulfilled';\n      state.movieArr = action.payload;\n    },\n    [fetchMovies.rejected]: state => {\n      state.status = 'Rejected';\n    }\n  }\n});\nexport const {\n  getMovie\n} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"sources":["/Users/skj14102001/Desktop/muvi/src/redux/movieSlice.js"],"names":["createSlice","createAsyncThunk","fetcher","fetchMovies","get","then","res","console","log","movieSlice","name","initialState","movieArr","status","reducers","getMovie","state","action","extraReducers","pending","fulfilled","payload","rejected","actions","reducer"],"mappings":"AAAA,SACIA,WADJ,EAEIC,gBAFJ,QAGO,kBAHP;AAIA,OAAOC,OAAP,MAAoB,UAApB;AAEA,MAAMC,WAAW,GAAGF,gBAAgB,CAChC,oBADgC,EAEhC,YAAW;AACP,SAAO,MAAMC,OAAO,CAACE,GAAR,CAAa,2BAAb,EACRC,IADQ,CACFC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADN,CAAb;AAGH,CAN+B,CAApC;AAUA,MAAMG,UAAU,GAAGT,WAAW,CAAC;AAC3BU,EAAAA,IAAI,EAAE,QADqB;AAE3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,MAAM,EAAE;AAFE,GAFa;AAM3BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAE5B;AAHK,GANiB;AAW3BC,EAAAA,aAAa,EAAE;AACX,KAACf,WAAW,CAACgB,OAAb,GAAwBH,KAAD,IAAW;AAC9BA,MAAAA,KAAK,CAACH,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACV,WAAW,CAACiB,SAAb,GAAyB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACH,MAAN,GAAe,WAAf;AACAG,MAAAA,KAAK,CAACJ,QAAN,GAAiBK,MAAM,CAACI,OAAxB;AACH,KAPU;AAQX,KAAClB,WAAW,CAACmB,QAAb,GAAyBN,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACH,MAAN,GAAe,UAAf;AACH;AAVU;AAXY,CAAD,CAA9B;AAyBA,OAAO,MAAM;AACTE,EAAAA;AADS,IAETN,UAAU,CAACc,OAFR;AAGP,eAAed,UAAU,CAACe,OAA1B","sourcesContent":["import {\n    createSlice,\n    createAsyncThunk\n} from \"@reduxjs/toolkit\";\nimport fetcher from \"./movies\";\n\nconst fetchMovies = createAsyncThunk(\n    'movies/fetchMovies',\n    async() => {\n        return await fetcher.get(`?apikey=e8960dea&s=batman`)\n            .then((res) => console.log(res))\n\n    }\n)\n\n\nconst movieSlice = createSlice({\n    name: \"movies\",\n    initialState: {\n        movieArr: [],\n        status: \"Pending\",\n    },\n    reducers: {\n        getMovie: (state, action) => {\n\n        }\n    },\n    extraReducers: {\n        [fetchMovies.pending]: (state) => {\n            state.status = 'Pending'\n        },\n        [fetchMovies.fulfilled]: (state, action) => {\n            state.status = 'Fulfilled';\n            state.movieArr = action.payload;\n        },\n        [fetchMovies.rejected]: (state) => {\n            state.status = 'Rejected'\n        }\n    }\n\n})\nexport const {\n    getMovie\n} = movieSlice.actions;\nexport default movieSlice.reducer;"]},"metadata":{},"sourceType":"module"}