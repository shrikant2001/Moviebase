{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport fetcher from \"./movies\";\nexport const fetchMovies = createAsyncThunk('movies/fetchMovies', async _ref => {\n  let {\n    Text\n  } = _ref;\n  console.log(\"async is getting\", Text);\n  const dataFetch = await fetcher.get(`?apikey=e8960dea&s=${Text}&page=1`).then(res => res.data.Search);\n  console.log(dataFetch);\n  return dataFetch;\n});\nconst movieSlice = createSlice({\n  name: \"movies\",\n  initialState: {\n    movieArr: [],\n    status: \"Pending\"\n  },\n  extraReducers: {\n    [fetchMovies.pending]: state => {\n      state.status = 'Pending';\n    },\n    [fetchMovies.fulfilled]: (state, action) => {\n      state.status = 'Fulfilled';\n      console.log(\"actoin\", action);\n      console.log(\"before\", state.movieArr);\n      state.movieArr = action.payload;\n      console.log(\"after\", state.movieArr);\n    },\n    [fetchMovies.rejected]: state => {\n      state.status = 'Rejected';\n    }\n  }\n});\nexport default movieSlice.reducer;","map":{"version":3,"sources":["/Users/skj14102001/Desktop/muvi/src/redux/movieSlice.js"],"names":["createSlice","createAsyncThunk","fetcher","fetchMovies","Text","console","log","dataFetch","get","then","res","data","Search","movieSlice","name","initialState","movieArr","status","extraReducers","pending","state","fulfilled","action","payload","rejected","reducer"],"mappings":"AAAA,SACIA,WADJ,EAEIC,gBAFJ,QAGO,kBAHP;AAKA,OAAOC,OAAP,MAAoB,UAApB;AAGA,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CACvC,oBADuC,EAEvC,cAEM;AAAA,MAFA;AACFG,IAAAA;AADE,GAEA;AACFC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC;AACA,QAAMG,SAAS,GAAG,MAAML,OAAO,CAACM,GAAR,CAAa,sBAAqBJ,IAAK,SAAvC,EACnBK,IADmB,CACbC,GAAD,IAAUA,GAAG,CAACC,IAAJ,CAASC,MADL,CAAxB;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,SAAOA,SAAP;AACH,CAVsC,CAApC;AAcP,MAAMM,UAAU,GAAGb,WAAW,CAAC;AAC3Bc,EAAAA,IAAI,EAAE,QADqB;AAE3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,MAAM,EAAE;AAFE,GAFa;AAM3BC,EAAAA,aAAa,EAAE;AACX,KAACf,WAAW,CAACgB,OAAb,GAAwBC,KAAD,IAAW;AAC9BA,MAAAA,KAAK,CAACH,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACd,WAAW,CAACkB,SAAb,GAAyB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACxCF,MAAAA,KAAK,CAACH,MAAN,GAAe,WAAf;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBgB,MAAtB;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBc,KAAK,CAACJ,QAA5B;AACAI,MAAAA,KAAK,CAACJ,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBc,KAAK,CAACJ,QAA3B;AACH,KAVU;AAWX,KAACb,WAAW,CAACqB,QAAb,GAAyBJ,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACH,MAAN,GAAe,UAAf;AACH;AAbU;AANY,CAAD,CAA9B;AAuBA,eAAeJ,UAAU,CAACY,OAA1B","sourcesContent":["import {\n    createSlice,\n    createAsyncThunk\n} from \"@reduxjs/toolkit\";\n\nimport fetcher from \"./movies\";\n\n\nexport const fetchMovies = createAsyncThunk(\n    'movies/fetchMovies',\n    async({\n        Text\n    }) => {\n        console.log(\"async is getting\", Text);\n        const dataFetch = await fetcher.get(`?apikey=e8960dea&s=${Text}&page=1`)\n            .then((res) => (res.data.Search))\n        console.log(dataFetch);\n        return dataFetch;\n    }\n)\n\n\nconst movieSlice = createSlice({\n    name: \"movies\",\n    initialState: {\n        movieArr: [],\n        status: \"Pending\",\n    },\n    extraReducers: {\n        [fetchMovies.pending]: (state) => {\n            state.status = 'Pending'\n        },\n        [fetchMovies.fulfilled]: (state, action) => {\n            state.status = 'Fulfilled';\n            console.log(\"actoin\", action);\n            console.log(\"before\", state.movieArr);\n            state.movieArr = action.payload;\n            console.log(\"after\", state.movieArr);\n        },\n        [fetchMovies.rejected]: (state) => {\n            state.status = 'Rejected'\n        }\n    }\n\n})\nexport default movieSlice.reducer;"]},"metadata":{},"sourceType":"module"}